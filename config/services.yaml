# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

    nova.poshta.api_key: '%env(resolve:NOVA_POSHTA_API_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Command\:
        resource: '../src/Command'
        tags: ['console.command']

    guzzle.client:
      class: 'GuzzleHttp\Client'
    GuzzleHttp\Client: '@guzzle.client'

    App\Messages\Logger\Formatter: ~

    App\Services\Api\NovaPoshta:
      arguments:
        $apiKey: '%env(resolve:NOVA_POSHTA_API_KEY)%'

    api.novaposhta:
      alias: App\Services\Api\NovaPoshta
      public: true

    messages.console.nova.poshta.sync:
        class: 'App\Messages\Console\NovaPoshta\SyncConsole'
        public: true

    messages.logger.nova.poshta.sync:
        class: 'App\Messages\Logger\NovaPoshta\SyncLog'
        public: true


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    sensio_framework_extra.view.listener:
        alias: Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener
